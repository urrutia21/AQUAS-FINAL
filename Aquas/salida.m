% PROYECTO FIN DE CARRERA - Jorge L. Vega Valle
% Fichero  salida.m


%Muestra el valor de los distintos parametros
%de salida de los modelos M/M/... y de las redes



%Recepcion de los parametros

if(estoy_en_redes_abiertas ~= 1)

	%En todos los modelos hay que recibir los valores de lambda y mu
	lambda_n = get(lambda, 'String');
	lambda_n = str2num(lambda_n);

	mu_n = get(mu, 'String');
	mu_n = str2num(mu_n);

	%Modelos M/M/s, M/M/s/K, M/M/s/inf/H, M/M/s/inf/H con Y repuestos (recibir s)
	if (eleccion == 2| eleccion == 4| eleccion ==6| eleccion==7)
   	   s_n = get(s, 'String');
	   s_n = str2num(s_n);
	end

	%Modelos M/M/1/K, M/M/s/K (recibir k)
	if (eleccion == 3| eleccion == 4)
       k_n = get(k, 'String');
	   k_n = str2num(k_n);
	end

	%Modelos M/M/1/inf/H, M/M/s/inf/H, M/M/s/inf/H con Y repuestos (recibir h)
	if (eleccion == 5| eleccion == 6 | eleccion ==7)
   	   h_n = get(h, 'String');
	   h_n = str2num(h_n);
	end

	%Modelo M/M/s/inf/H con Y repuestos (recibir y)
	if (eleccion == 7)
   	   y_n = get(y, 'String');
	   y_n = str2num(y_n);
   end
end



%Si los parametros son correctos se abre una nueva ventana con
%los parametros de salida

if ((eleccion == 1 & lambda_n>=0 & mu_n>=0 & lambda_n<mu_n) | ...
   (eleccion == 2 & lambda_n>=0 & mu_n>=0 & s_n>=1 & lambda_n<(s_n*mu_n) & floor(s_n)==s_n & ceil(s_n)==s_n) | ...
   (eleccion == 3 & lambda_n>=0 & mu_n>=0 & k_n>=0 & floor(k_n)==k_n & ceil(k_n)==k_n) | ...
   (eleccion == 4 & lambda_n>=0 & mu_n>=0 & s_n>=1 & k_n>=0 & floor(s_n)==s_n & ceil(s_n)==s_n & floor(k_n)==k_n & ceil(k_n)==k_n) | ...
   (eleccion == 5 & lambda_n>=0 & mu_n>=0 & h_n>0 & floor(h_n)==h_n & ceil(h_n)==h_n) | ...
   (eleccion == 6 & lambda_n>=0 & mu_n>=0 & s_n>=1 & h_n>0 & h_n>=s_n & floor(s_n)==s_n & ceil(s_n)==s_n & floor(h_n)==h_n & ceil(h_n)==h_n) | ...
   (eleccion == 7 & lambda_n>=0 & mu_n>=0 & s_n>=1 & h_n>0 & y_n>=0 & s_n<=(y_n+h_n) & floor(s_n)==s_n & ceil(s_n)==s_n & floor(h_n)==h_n & ceil(h_n)==h_n & floor(y_n)==y_n & ceil(y_n)==y_n) | ...
   (eleccion == 8 & lambda_n>=0 & mu_n>=0))

  if (estoy_en_redes_abiertas ~= 1)  
     close(1)
  end


  if (estoy_en_redes_abiertas ~=1)
	figure('Units', 'normalized',...
		  'Position', [0.05 0.05 0.9 0.9],...
          'MenuBar', 'none', ...
          'name', 'Resolucion analitica: Parametros de salida', ...
          'NumberTitle', 'off', ...
          'resize','off');
  else
     	figure('Units', 'normalized',...
		  'Position', [0.1 0.1 0.8 0.8],...
          'MenuBar', 'none', ...
          'name', 'Resolucion analitica: Parametros de salida', ...
          'NumberTitle', 'off', ...
          'resize','off');
  end
     
     
  frame_salida_1 = uicontrol(gcf, 'Style', 'Frame', ...
     'Units', 'normalized', ...
     'BackgroundColor', [.6 .6 .6],...
     'Position', [0.15 0.78 0.7 0.2]);

  if (eleccion ~=8)
   
     frame_salida_2 = uicontrol(gcf, 'Style', 'Frame', ...
     	'Units', 'normalized', ...
		'BackgroundColor', [.6 .6 .6],...
        'Position', [0.15 0.53 0.37 0.22]);
  end

  if (eleccion ==8)
     frame_salida_3 = uicontrol(gcf, 'Style', 'Frame', ...
      'Units', 'normalized', ...
   	  'BackgroundColor', [.6 .6 .6],...
     'Position', [0.325 0.53 0.325 0.22]);
  else
     frame_salida_3 = uicontrol(gcf, 'Style', 'Frame', ...
        'Units', 'normalized', ...
	    'BackgroundColor', [.6 .6 .6],...
        'Position', [0.525 0.53 0.325 0.22]);
  end



  text_salida_parametros = uicontrol(gcf, 'Style', 'Text', ...
     'String', 'Parametros de salida', ...
     'Units', 'normalized', ...
     'Position', [0.3 0.92 0.36 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontWeight', 'bold', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');

  switch(eleccion)
  case 1,
     modelo='Modelo M/M/1 con ';
  case 2,
     modelo='Modelo M/M/s con ';
  case 3,
     modelo='Modelo M/M/1/K con ';
  case 4,
     modelo='Modelo M/M/s/K con ';
  case 5,
     modelo='Modelo M/M/1/inf/H con ';
  case 6,
     modelo='Modelo M/M/s/inf/H con ';
  case 7,
     modelo='Modelo M/M/s/inf/H con Y repuestos con ';
  case 8,
     modelo='Modelo M/M/inf con ';
  end

  if (estoy_en_redes_abiertas == 1)
     modelo=strcat(modelo, ' Lambda Mayuscula = ');
  else
     modelo=strcat(modelo, ' Lambda = ');
  end

  modelo=strcat(modelo,num2str(lambda_n));

  modelo=strcat(modelo,' , Mu = ');

  modelo=strcat(modelo,num2str(mu_n));

  %Modelos que incluyen un numero de servidores
  if(eleccion==2|eleccion==4|eleccion==6|eleccion==7)
     modelo=strcat(modelo,' , s = ');
     modelo=strcat(modelo,num2str(s_n));
  end

  %Modelos que incluyen un tamanho de cola K
  if(eleccion==3|eleccion==4)
     modelo=strcat(modelo,' , k = ');
     modelo=strcat(modelo,num2str(k_n));
  end

  %Modelos que incluyen una poblacion potencial finita H
  if(eleccion==5|eleccion==6|eleccion==7)
     modelo=strcat(modelo,' , H= ');
     modelo=strcat(modelo,num2str(h_n));
  end

  %Modelos que incluyen un numero de repuestos Y
  if(eleccion==7)
     modelo=strcat(modelo,' , Y= ');
     modelo=strcat(modelo,num2str(y_n));
  end

  %Mostramos en la pantalla de salida las caracteristicas del modelo
  
  text_salida_modelo = uicontrol(gcf, 'Style', 'Text', ...
   'String', modelo, ...
   'Units', 'normalized', ...
   'Position', [0.2 0.885 0.56 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontSize', 0.3, ...
   'HorizontalAlignment', 'Center');

  text_salida_l = uicontrol(gcf, 'Style', 'Text', ...
   'String', 'L =', ...
   'Units', 'normalized', ...
   'Position', [0.2 0.85 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontWeight', 'bold', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center');

  text_salida_lq = uicontrol(gcf, 'Style', 'Text', ...
   'String', 'Lq =', ...
   'Units', 'normalized', ...
   'Position', [0.2 0.8 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontWeight', 'bold', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center');

  text_salida_w = uicontrol(gcf, 'Style', 'Text', ...
   'String', 'W =', ...
   'Units', 'normalized', ...
   'Position', [0.4 0.85 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontWeight', 'bold', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center');


  text_salida_wq = uicontrol(gcf, 'Style', 'Text', ...
   'String', 'Wq =', ...
   'Units', 'normalized', ...
   'Position', [0.4 0.8 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontWeight', 'bold', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center');

  %La intensidad de trafico se corresponde con el ro_barra

  text_salida_inten = uicontrol(gcf, 'Style', 'Text', ...
   'String', 'Intensidad =' , ...
   'Units', 'normalized', ...
   'Position', [0.6 0.85 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontWeight', 'bold', ...
   'FontSize', 0.3, ...
   'HorizontalAlignment', 'Center');

  %La eficiencia se corresponde con W/Ws

  text_salida_efec = uicontrol(gcf, 'Style', 'Text', ...
   'String', 'Eficiencia =', ...
   'Units', 'normalized', ...
   'Position', [0.6 0.8 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontWeight', 'bold', ...
   'FontSize', 0.3, ...
   'HorizontalAlignment', 'Center');
     

  %Calculo de L, Lq, W y Wq en función de cada modelo

  switch eleccion
   
  case 1,
    %Modelo M/M/1
    ro_barra=lambda_n/mu_n;
    l_n =lambda_n/(mu_n-lambda_n);
    lq_n=(lambda_n^2)/(mu_n*(mu_n-lambda_n));
    w_n =1/(mu_n-lambda_n);
    wq_n=lambda_n/(mu_n*(mu_n-lambda_n));
      
	   
  case 2,
    %Modelo M/M/s
    ro_barra=lambda_n/(mu_n*s_n);
   
    c=ones(1,s_n);
    for i=2:s_n
       c(i)=c(i-1)*lambda_n/(mu_n*(i-1));
    end
   
    c_mayor_s=c(s_n)*lambda_n/(s_n*mu_n-lambda_n);
   
    p_cero=1/(sum(c)+c_mayor_s);
   
    lq_n=c_mayor_s*lambda_n*p_cero/(s_n*mu_n-lambda_n);
    wq_n=lq_n/lambda_n;
    w_n=wq_n+1/mu_n;
    l_n=lambda_n*w_n;
        
            
  case 3,
    %Modelo M/M/1/K
    if(lambda_n/mu_n==1) %ro igual a 1
       l_n=(k_n+1)/2;
       lambdabarra=lambda_n*(k_n+1)/(k_n+2);
    else 						%ro distinto de 1
       ro=lambda_n/mu_n;
       l_n=(ro/(1-ro))-(k_n+2)*power(ro,k_n+2)/(1-power(ro,k_n+2));
       lambdabarra=lambda_n*(power(ro,k_n+1)-1)/(power(ro,k_n+2)-1);      
      
       clear ro;
    end
   
    if (isnan(l_n)==1)
      cambiar_parametros_mm=1;
      entrada;
      text_desbordamiento = uicontrol(gcf, 'Style', 'Text', ...
		   'Units', 'normalized', ...
		   'String', 'DESBORDAMIENTO EN EL CALCULO', ...
           'Position', [0.35 0.74 0.30 0.04], ...
		   'BackgroundColor', [.702 .702 .702],...   
           'ForegroundColor', 'r',...
           'FontUnits', 'normalized', ...
           'FontWeight', 'bold', ...
           'FontSize', 0.4, ...
		   'HorizontalAlignment', 'Center');
       break;
     else      
      
	   w_n=l_n/lambdabarra;
   	   wq_n=w_n-1/mu_n;
	   lq_n=lambdabarra*wq_n;
   
   	   ro_barra=lambdabarra/mu_n;
   
	   clear lambdabarra;
   end
               
      
  case 4,
    %Modelo M/M/s/K
    c=ones(1,s_n);
    for i=2:s_n
      c(i)=c(i-1)*lambda_n/(mu_n*(i-1));
    end
   
    ro=(lambda_n/(mu_n*s_n));
   
    if (ro == 1) %ro igual a 1
       c_mayor_s=c(s_n)*(k_n+1);
    else			 %ro distinto de 1
       c_mayor_s=c(s_n)*(ro-power(ro,k_n+2))/(1-ro);
    end
   
    vector_p=ones(1,k_n+s_n+1);
   
    vector_p(1)=1/(sum(c)+c_mayor_s);
   
    for i=2:s_n
       vector_p(i)=c(i)*vector_p(1);
    end
   
    for i=s_n+1:k_n+s_n+1
       vector_p(i)=ro*vector_p(i-1);
    end
   
    lambdabarra = lambda_n * (1-vector_p(k_n+s_n+1));
   
    if (ro == 1)
       lq_n=k_n*(k_n+1)*vector_p(s_n)/2;
    else
       lq_n=(1+k_n*power(ro,k_n+1)-(k_n+1)*power(ro,k_n))*...
         power(ro,2)*vector_p(s_n)/power(1-ro,2);
    end
   
    if (isnan(lq_n)==1)
      cambiar_parametros_mm=1;
      entrada;
      text_desbordamiento = uicontrol(gcf, 'Style', 'Text', ...
		   'Units', 'normalized', ...
		   'String', 'DESBORDAMIENTO EN EL CALCULO', ...
           'Position', [0.35 0.74 0.30 0.04], ...
		   'BackgroundColor', [.702 .702 .702],...   
           'ForegroundColor', 'r',...
           'FontUnits', 'normalized', ...
           'FontWeight', 'bold', ...
           'FontSize', 0.4, ...
		   'HorizontalAlignment', 'Center');
       break;
    else      
   
	   wq_n=lq_n/lambdabarra;
   	   w_n=wq_n+1/mu_n;
	   l_n=lambdabarra*w_n;
   
   	   ro_barra=lambdabarra/(mu_n*s_n);
   
   	   clear c;
	   clear ro;
   	   clear c_mayor_s;
       clear lambdabarra;      
     end
     
   
  case 5,
	 %Modelo M/M/1/inf/H   
    c=ones(1,h_n+1);
    for i=2:h_n+1
       c(i)=c(i-1)*lambda_n/mu_n*(h_n-i+2);
    end
   
    vector_p=ones(1,h_n+1);
   
    vector_p(1)=1/sum(c);
   
    for i=2:h_n+1
       vector_p(i)=c(i)*vector_p(1);
    end
   
    %n es un vector formado por 1,2,3,...h
    n=linspace(1,h_n,h_n);
   
    l_n=sum(n.*vector_p(2:h_n+1));
   
    lambdabarra=lambda_n*(h_n-l_n);
   
    if (isnan(l_n)==1)
      cambiar_parametros_mm=1;
      entrada;
      text_desbordamiento = uicontrol(gcf, 'Style', 'Text', ...
		   'Units', 'normalized', ...
		   'String', 'DESBORDAMIENTO EN EL CALCULO', ...
           'Position', [0.35 0.74 0.30 0.04], ...
		   'BackgroundColor', [.702 .702 .702],...   
           'ForegroundColor', 'r',...
           'FontUnits', 'normalized', ...
           'FontWeight', 'bold', ...
           'FontSize', 0.4, ...
		   'HorizontalAlignment', 'Center');
      break;
   else      

   
	   w_n=l_n/lambdabarra;
       wq_n=w_n-1/mu_n;
	   lq_n=lambdabarra*wq_n;
   
   	   ro_barra=lambdabarra/mu_n;

	   clear c;
	   clear n;
       clear lambdabarra;
      
   end
   
            
  case 6,
	%Modelo M/M/s/inf/H   
    c=ones(1,h_n+1);
    ro=lambda_n/(mu_n*s_n);
    for i=2:s_n+1
      c(i)=c(i-1)*lambda_n/(mu_n*(i-1))*(h_n-(i-1)+1);
    end
    for i=s_n+2:h_n+1
       c(i)=c(i-1)*ro*(h_n-(i-1)+1);
   end
   
   vector_p=ones(1,h_n+1);
   
   vector_p(1)=1/sum(c);
   
   for i=2:h_n+1
      vector_p(i)=c(i)*vector_p(1);
   end
   
   %n es un vector formado por 1,2,3,...h   
   n=linspace(1,h_n,h_n);
   
   l_n=sum(n.*vector_p(2:h_n+1));
   
   lambdabarra = lambda_n * (h_n-l_n);
   
   if (isnan(l_n)==1)
      cambiar_parametros_mm=1;
      entrada;
      text_desbordamiento = uicontrol(gcf, 'Style', 'Text', ...
		   'Units', 'normalized', ...
		   'String', 'DESBORDAMIENTO EN EL CALCULO', ...
           'Position', [0.35 0.74 0.30 0.04], ...
		   'BackgroundColor', [.702 .702 .702],...   
           'ForegroundColor', 'r',...
           'FontUnits', 'normalized', ...
           'FontWeight', 'bold', ...
           'FontSize', 0.4, ...
		   'HorizontalAlignment', 'Center');
      break;
   else      
   
	   w_n=l_n/lambdabarra;
   	   wq_n=w_n-1/mu_n;
	   lq_n=lambdabarra*wq_n;
   
   	   ro_barra=lambdabarra/(s_n*mu_n);
   
   	   clear c;
	   clear ro;
   	   clear n;
       clear lambdabarra;
      
   end
   
         
  case 7,
    %Modelo M/M/s/inf/H con Y repuestos
    c=ones(1,y_n+h_n+1);
    ro=lambda_n/(mu_n*s_n);
    if (s_n<=y_n)   %Si s<=y
       for i=2:s_n+1
         c(i)=c(i-1)*lambda_n*h_n/(mu_n*(i-1));
       end
       for i=s_n+2:y_n+1
         c(i)=h_n*ro*c(i-1);
       end
       for i=y_n+2:y_n+h_n+1
         c(i)=c(i-1)*ro*(h_n+y_n-(i-1)+1);
       end
   else				%s>y
       for i=2:y_n+1
         c(i)=c(i-1)*lambda_n*h_n/(mu_n*(i-1));
       end
       for i=y_n+2:s_n+1
         c(i)=(h_n+y_n-(i-1)+1)*lambda_n/((i-1)*mu_n)*c(i-1);
       end
       for i=s_n+2:y_n+h_n+1
         c(i)=(h_n+y_n-(i-1)+1)*ro*c(i-1);
       end
   end
   
   vector_p=ones(1,y_n+h_n+1);
   
   vector_p(1)=1/sum(c);
   
   for i=2:y_n+h_n+1
      vector_p(i)=c(i)*vector_p(1);
   end
   
   %n es un vector formado por 1,2,...y+h
   n=linspace(1,y_n+h_n,y_n+h_n);
   
   l_n=sum(n.*vector_p(2:y_n+h_n+1));
            
   lambdabarra=0;
   for i=y_n:y_n+h_n
   	 lambdabarra=(i-y_n)*vector_p(i+1)+lambdabarra;
   end
   lambdabarra=lambda_n*(h_n-lambdabarra);

   if (isnan(l_n)==1)
      cambiar_parametros_mm=1;
      entrada;
      text_desbordamiento = uicontrol(gcf, 'Style', 'Text', ...
		   'Units', 'normalized', ...
		   'String', 'DESBORDAMIENTO EN EL CALCULO', ...
           'Position', [0.35 0.74 0.30 0.04], ...
		   'BackgroundColor', [.702 .702 .702],...   
           'ForegroundColor', 'r',...
           'FontUnits', 'normalized', ...
           'FontWeight', 'bold', ...
           'FontSize', 0.4, ...
		   'HorizontalAlignment', 'Center');
      break;
   else      
   
   	   w_n=l_n/lambdabarra;
	   wq_n=w_n-1/mu_n;
   	   lq_n=lambdabarra*wq_n;
   
   	   ro_barra=lambdabarra/(s_n*mu_n);
   
   	   clear c;
	   clear ro;
   	   clear n;
	   clear lambdabarra;
   end
         
  case 8,
    %Modelo M/M/inf
    l_n=lambda_n/mu_n;
    lq_n=0;
    wq_n=0;
    w_n=1/mu_n;
   
    ro_barra=0;
   
   
  end        


  %Mostramos los valores de L, Lq, W y Wq

  l= uicontrol(gcf, 'Style', 'Text', ...
    'Units', 'normalized', ...
	'String', num2str(l_n), ...
    'Position', [0.3 0.85 0.1 0.05], ...
    'BackgroundColor', [.6 .6 .6],...
    'FontUnits', 'normalized', ...
    'FontSize', 0.4, ...
    'HorizontalAlignment', 'Center');

  if (lq_n<0)
   lq_n=0;
  end

   
  lq= uicontrol(gcf, 'Style', 'Text', ...
   'Units', 'normalized', ...
   'String', num2str(lq_n), ...
   'Position', [0.3 0.8 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center');

  w= uicontrol(gcf, 'Style', 'Text', ...
   'Units', 'normalized', ...
   'String', num2str(w_n), ...
   'Position', [0.5 0.85 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center', ...
   'Callback', 'valor_w');

  if (wq_n<0)
    wq_n=0;
  end

  wq= uicontrol(gcf, 'Style', 'Text', ...
   'Units', 'normalized', ...
   'String', num2str(wq_n), ...
   'Position', [0.5 0.8 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center');




  intens = uicontrol(gcf, 'Style', 'Text', ...
   'Units', 'normalized', ...
   'String', num2str(ro_barra), ...
   'Position', [0.7 0.85 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center');

  efec = uicontrol(gcf, 'Style', 'Text', ...
   'Units', 'normalized', ...
   'String', num2str(w_n*mu_n), ...
   'Position', [0.7 0.8 0.1 0.05], ...
   'BackgroundColor', [.6 .6 .6],...
   'FontUnits', 'normalized', ...
   'FontSize', 0.4, ...
   'HorizontalAlignment', 'Center');


  drawnow;

  %En el modelo M/M/inf no mostramos los valores de la 
  %funcion de distribucion de W(t)

  if (eleccion ~=8)

    text_salida_wt_1= uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
     'String', 'En t= ', ...
     'Position', [0.16 0.69 0.05 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');

    %Llama al fichero calcula_wt para calcular el valor de
    %la funcion de distribucion de W(t) para un modelo 
    %concreto y un determinado instante de tiempo.

   tiempo_wt= uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.21 0.69 0.05 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center', ...
	 'Callback', 'calcula_wt');

    text_salida_wt_2= uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
	 'String', 'W(t)= ', ...
     'Position', [0.29 0.69 0.06 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');

    valor_wt = uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
     'Position', [0.37 0.69 0.10 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');

  end

  %En el modelo M/M/inf no mostramos los valores de la funcion de 
  %distribucion de W(t). Tampoco hacemos una representacion grafica
  %del valor de Wq(t) ni W(t).



  if (eleccion ~=8)


    text_salida_wqt_2= uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
  	 'String', 'En t= ', ...
     'Position', [0.16 0.63 0.05 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');

    %Llama al fichero calcula_wqt para calcular el valor de
    %la funcion de distribucion de Wq(t) para un modelo 
    %concreto y un determinado instante de tiempo.

    tiempo_wqt= uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.21 0.63 0.05 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center', ...
  	 'Callback', 'calcula_wqt');

    text_salida_wqt_2= uicontrol(gcf, 'Style', 'Text', ...
      'Units', 'normalized', ...
	  'String', 'Wq(t)= ', ...
      'Position', [0.29 0.63 0.06 0.05], ...
      'BackgroundColor', [.6 .6 .6],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.4, ...
      'HorizontalAlignment', 'Center');

    valor_wqt = uicontrol(gcf, 'Style', 'Text', ...
      'Units', 'normalized', ...
      'Position', [0.37 0.63 0.10 0.05], ...
      'BackgroundColor', [.6 .6 .6],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.4, ...
      'HorizontalAlignment', 'Center');






    text_dibujar_1 = uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
     'String', 'Dibujar entre t1= ', ...
     'Position', [0.16 0.56 0.10 0.06], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.25, ...
     'HorizontalAlignment', 'Center');

   tiempo_1 = uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.26 0.57 0.05 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');

   text_dibujar_1 = uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
     'String', ' y t2= ', ...
     'Position', [0.32 0.57 0.05 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.3, ...
     'HorizontalAlignment', 'Center');

   tiempo_2 = uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.38 0.57 0.05 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');

   %Llama al fichero dibujar para representar el valor de
   %la funcion de distribucion de Wq(t) y de W(t) para un modelo 
   %concreto y un determinado intervalo de tiempo.

   boton_dibujar_1 = uicontrol(gcf, 'Style', 'pushbutton', ...
     'Units', 'normalized', ...
     'String', 'OK', ...
     'Position', [0.44 0.57 0.05 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center', ...
     'Callback', 'dibujar');


  end


  if (eleccion==8)
      text_salida_p_1= uicontrol(gcf, 'Style', 'Text', ...
       'Units', 'normalized', ...
       'String', 'p ', ...
       'Position', [0.33 0.69 0.05 0.05], ...
       'BackgroundColor', [.6 .6 .6],...
       'FontUnits', 'normalized', ...
       'FontSize', 0.4, ...
       'HorizontalAlignment', 'Center');
  else
    text_salida_p_1= uicontrol(gcf, 'Style', 'Text', ...
      'Units', 'normalized', ...
      'String', 'p ', ...
      'Position', [0.53 0.69 0.05 0.05], ...
      'BackgroundColor', [.6 .6 .6],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.4, ...
      'HorizontalAlignment', 'Center');
   end

  %Llama al fichero calcula_p, para calcular el valor
  %de una determinada p(i), en funcion del valor de i y del
  %modelo concreto que haya elegido el usuario.

  if (eleccion==8)
    indice_p= uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.39 0.69 0.05 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center', ...
     'Callback', 'calcula_p');      
  else
    indice_p= uicontrol(gcf, 'Style', 'Edit', ...
      'Units', 'normalized', ...
      'Position', [0.59 0.69 0.05 0.05], ...
      'BackgroundColor', [.702 .702 .702],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.4, ...
      'HorizontalAlignment', 'Center', ...
      'Callback', 'calcula_p');  
   end

  if (eleccion==8)
    text_salida_p_2= uicontrol(gcf, 'Style', 'Text', ...
      'Units', 'normalized', ...
	  'String', 'clientes ', ...
      'Position', [0.45 0.69 0.07 0.05], ...
      'BackgroundColor', [.6 .6 .6],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.4, ...
      'HorizontalAlignment', 'Center');
   else
     text_salida_p_2= uicontrol(gcf, 'Style', 'Text', ...
       'Units', 'normalized', ...
	   'String', 'clientes ', ...
       'Position', [0.65 0.69 0.07 0.05], ...
       'BackgroundColor', [.6 .6 .6],...
       'FontUnits', 'normalized', ...
       'FontSize', 0.4, ...
       'HorizontalAlignment', 'Center');
   end


   if (eleccion==8)
     valor_p = uicontrol(gcf, 'Style', 'Text', ...
       'Units', 'normalized', ...
       'Position', [0.53 0.69 0.11 0.05], ...
       'BackgroundColor', [.6 .6 .6],...
       'FontUnits', 'normalized', ...
       'FontSize', 0.4, ...
       'HorizontalAlignment', 'Center');
   else
     valor_p = uicontrol(gcf, 'Style', 'Text', ...
       'Units', 'normalized', ...
       'Position', [0.73 0.69 0.11 0.05], ...
       'BackgroundColor', [.6 .6 .6],...
       'FontUnits', 'normalized', ...
       'FontSize', 0.4, ...
       'HorizontalAlignment', 'Center');
   end



  %Para los modelos M/M/1/k, M/M/s/k, M/M/1/inf/H, M/M/s/inf/H y
  %M/M/s/inf/H con Y repuestos tenemos la posibilidad de hallar 
  %los valores de q(i)


  if (eleccion == 3 | eleccion == 4 | eleccion == 5 | eleccion == 6 | eleccion ==7)
   
    text_salida_q_1= uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
	 'String', 'q ', ...
     'Position', [0.53 0.63 0.05 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');


    %Llama al fichero calcula_q, para calcular el valor
    %de una determinada q(i), en funcion del valor de i y del
    %modelo concreto que haya elegido el usuario.

	indice_q= uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.59 0.63 0.05 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center', ...
	 'Callback', 'calcula_q'); 

	text_salida_q_2= uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
	 'String', 'clientes ', ...
     'Position', [0.65 0.63 0.07 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');


	valor_q = uicontrol(gcf, 'Style', 'Text', ...
     'Units', 'normalized', ...
     'Position', [0.73 0.63 0.11 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');

  end

  if (eleccion==8)
    text_dibujar_3 = uicontrol(gcf, 'Style', 'Text', ...
      'Units', 'normalized', ...
      'String', 'Dibujar entre p ', ...
      'Position', [0.33 0.56 0.10 0.06], ...
      'BackgroundColor', [.6 .6 .6],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.25, ...
      'HorizontalAlignment', 'Center');
   else
     text_dibujar_3 = uicontrol(gcf, 'Style', 'Text', ...
       'Units', 'normalized', ...
       'String', 'Dibujar entre p ', ...
       'Position', [0.53 0.56 0.10 0.06], ...
       'BackgroundColor', [.6 .6 .6],...
       'FontUnits', 'normalized', ...
       'FontSize', 0.25, ...
       'HorizontalAlignment', 'Center');
   end

  if (eleccion==8)
    indice_1 = uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.44 0.57 0.04 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');
  else
    indice_1 = uicontrol(gcf, 'Style', 'Edit', ...
      'Units', 'normalized', ...
      'Position', [0.64 0.57 0.04 0.05], ...
      'BackgroundColor', [.702 .702 .702],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.4, ...
      'HorizontalAlignment', 'Center');
  end

  if (eleccion==8)
    text_dibujar_4 = uicontrol(gcf, 'Style', 'Text', ...
      'Units', 'normalized', ...
      'String', ' y p ', ...
      'Position', [0.49 0.57 0.03 0.05], ...
      'BackgroundColor', [.6 .6 .6],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.3, ...
      'HorizontalAlignment', 'Center');
  else
    text_dibujar_4 = uicontrol(gcf, 'Style', 'Text', ...
      'Units', 'normalized', ...
      'String', ' y p ', ...
      'Position', [0.69 0.57 0.03 0.05], ...
      'BackgroundColor', [.6 .6 .6],...
      'FontUnits', 'normalized', ...
      'FontSize', 0.3, ...
      'HorizontalAlignment', 'Center');
  end

  if (eleccion==8)
    indice_2 = uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.53 0.57 0.04 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');
  else
    indice_2 = uicontrol(gcf, 'Style', 'Edit', ...
     'Units', 'normalized', ...
     'Position', [0.73 0.57 0.04 0.05], ...
     'BackgroundColor', [.702 .702 .702],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center');
  end

  %Llama al fichero dibujar_p, para hacer una representacion
  %del valor de los p(i) en un intervalo de i que seleccione
  %el usuario. El resultado se muestra en un diagrama 
  %de barras.

  if (eleccion==8)
    boton_dibujar_2 = uicontrol(gcf, 'Style', 'pushbutton', ...
     'Units', 'normalized', ...
     'String', 'OK', ...
     'Position', [0.58 0.57 0.05 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center', ...
     'Callback', 'dibujar_p');
  else
    boton_dibujar_2 = uicontrol(gcf, 'Style', 'pushbutton', ...
     'Units', 'normalized', ...
     'String', 'OK', ...
     'Position', [0.78 0.57 0.05 0.05], ...
     'BackgroundColor', [.6 .6 .6],...
     'FontUnits', 'normalized', ...
     'FontSize', 0.4, ...
     'HorizontalAlignment', 'Center', ...
     'Callback', 'dibujar_p');
  end





  %Por defecto, la grafica de la funcion de distribucion de W(t) y 
  %Wq(t) se va a mostrar en el intervalo [0..3*W]. Es por ello, que hay
  %que calcular estos valores para cada modelo.


  x=linspace(0,3*w_n,100); 

  switch eleccion 
   
  case 1,
    %Modelo M/M/1
   
    w_t=1-exp(-(mu_n-lambda_n)*x);
    wq_t=1-(lambda_n/mu_n)*exp(-(mu_n-lambda_n)*x);
   
  case 2,
    %Modelo M/M/s
   
   wq_t=1-c_mayor_s*p_cero*exp(-(s_n*mu_n-lambda_n)*x);
   
   wq_cero=1-c_mayor_s*p_cero;
   
   if (lambda_n/mu_n == (s_n-1))
      w_t=1-(1+c_mayor_s*p_cero*x*mu_n).*exp(-mu_n*x);
   else
      w_t=1+(lambda_n-s_n*mu_n+mu_n*wq_cero)/(s_n*mu_n-lambda_n-mu_n)*exp(-(mu_n*x))+...
         (c_mayor_s*mu_n*p_cero)/(s_n*mu_n-lambda_n-mu_n)*exp(-(s_n*mu_n-lambda_n)*x);
   end
   
   
  case 3,
   %Modelo M/M/1/K
   
   vector_p=ones(1,k_n+2);
      
   if (lambda_n/mu_n == 1)
      vector_p=vector_p*(1/(k_n+2));
   else
      ro=(lambda_n/mu_n);
      n=linspace(0,k_n+1,k_n+2); %n es un vector 0,1,...k
      vector_p=(ro-1)/(power(ro, k_n+2)-1)*power(ro,n);
      
      clear ro;
      clear n;
   end
               
   n2=linspace(0,k_n,k_n+1);
   vector_q=vector_p(n2+1)/(1-vector_p(k_n+2));
      
   variable_a_wqt=ones(1,length(x));
   variable_s_wqt=ones(1,length(x));
   if (k_n==0)
      variable_b_wqt=0;
   else
      variable_b_wqt=vector_q(2)*ones(1,length(x));
   end
   

      
   for variable_n_wqt=2:k_n
      variable_a_wqt=variable_a_wqt.*(mu_n*x/variable_n_wqt);
      variable_s_wqt=variable_s_wqt+variable_a_wqt;
      variable_b_wqt=variable_b_wqt+vector_q(variable_n_wqt+1)*variable_s_wqt;
   end
   
   %Calcula Wq(t)
   wq_t=1-variable_b_wqt.*exp(-mu_n*x);
      
      
    variable_a_wt=ones(1,length(x));
	variable_s_wt=ones(1,length(x));
	variable_b_wt=vector_q(1)*ones(1,length(x));

      
   for variable_n_wt=1:k_n
      variable_a_wt=variable_a_wt.*(mu_n*x/variable_n_wt);
      variable_s_wt=variable_s_wt+variable_a_wt;
      variable_b_wt=variable_b_wt+vector_q(variable_n_wt+1)*variable_s_wt;
   end
   
   %Calcula W(t)
   w_t=1-variable_b_wt.*exp(-mu_n*x);
   
   clear n2;
   clear variable_a_wt;
   clear variable_a_wqt;
   clear variable_s_wt;
   clear variable_s_wqt;
   clear variable_b_wt;
   clear variable_b_wqt;
   clear variable_n_wt;
   clear variable_n_wqt;
   
  case 4,
   %Modelo M/M/s/k
   
   %n2 es un vector 0,1,...k+s-1
   n2=linspace(0,k_n+s_n-1,k_n+s_n);   
   vector_q=vector_p(n2+1)/(1-vector_p(k_n+s_n+1));
      
   variable_a_wqt=ones(1,length(x));
   variable_s_wqt=ones(1,length(x));
   if (k_n==0)
      variable_b_wqt=0;
   else
      variable_b_wqt=vector_q(s_n+1)*ones(1,length(x));
   end
   
      
   for variable_n_wqt=s_n+1:k_n+s_n-1
      variable_a_wqt=variable_a_wqt.*(mu_n*x*s_n/(variable_n_wqt-s_n));
      variable_s_wqt=variable_s_wqt+variable_a_wqt;
      variable_b_wqt=variable_b_wqt+vector_q(variable_n_wqt+1)*variable_s_wqt;
   end
   
   %Calcula Wq(t)
   wq_t=1-variable_b_wqt.*exp(-mu_n*x*s_n);
   
   clear w_t;
   
   for i=1:length(x)
      w_t(i)=quad('calcular_wt_mmsk',0,x(i), 0.001, [], x(i), s_n, vector_q, k_n, mu_n);
      if (w_t(i)>1)
          w_t(i)=1;
      end
   end
   
   
   
   clear n2;
   clear variable_a_wqt;
   clear variable_b_wqt;
   clear variable_s_wqt;
   clear variable_n_wqt;
   
  case 5,
   %Modelo M/M/1/inf/H
   
   %n2 es un vector 0,1,...h-1
   n2=linspace(0,h_n-1,h_n);   
   vector_q=vector_p(n2+1).*(h_n-n2)/(h_n-l_n);
      
   variable_a_wqt=ones(1,length(x));
   variable_s_wqt=ones(1,length(x));
   if (h_n==1)
      variable_b_wqt=0;
   else      
      variable_b_wqt=vector_q(2)*ones(1,length(x));
   end
   
      
   for variable_n_wqt=2:h_n-1
      variable_a_wqt=variable_a_wqt.*(mu_n*x/variable_n_wqt);
      variable_s_wqt=variable_s_wqt+variable_a_wqt;
      variable_b_wqt=variable_b_wqt+vector_q(variable_n_wqt+1)*variable_s_wqt;
   end
   
   %Calcula Wq(t)
   wq_t=1-variable_b_wqt.*exp(-mu_n*x);
   
   
    variable_a_wt=ones(1,length(x));
	variable_s_wt=ones(1,length(x));
	variable_b_wt=vector_q(1)*ones(1,length(x));

      
   for variable_n_wt=1:h_n-1
      variable_a_wt=variable_a_wt.*(mu_n*x/variable_n_wt);
      variable_s_wt=variable_s_wt+variable_a_wt;
      variable_b_wt=variable_b_wt+vector_q(variable_n_wt+1)*variable_s_wt;
   end
   
   %Calcula W(t)
   w_t=1-variable_b_wt.*exp(-mu_n*x);
   
   clear n2;
   clear variable_a_wt;
   clear variable_a_wqt;
   clear variable_s_wt;
   clear variable_s_wqt;
   clear variable_b_wt;
   clear variable_b_wqt;
   clear variable_n_wt;
   clear variable_n_wqt;
   
  case 6,
   %Modelo M/M/s/inf/H
   
   %n2 es un vector 0,1,..h-1
   n2=linspace(0,h_n-1,h_n);   
   vector_q=vector_p(n2+1).*(h_n-n2)/(h_n-l_n);
      
   variable_a_wqt=ones(1,length(x));
   variable_s_wqt=ones(1,length(x));

  %Si h_n==s_n no existe q(s_n+1) y cuando luego lo necesitemos dara error
  if (h_n==s_n)
      vector_q=cat(2,vector_q,0);
  end

  variable_b_wqt=vector_q(s_n+1)*ones(1,length(x));
  
  
      

      
   for variable_n_wqt=s_n+1:h_n-1
      variable_a_wqt=variable_a_wqt.*(mu_n*x*s_n/(variable_n_wqt-s_n));
      variable_s_wqt=variable_s_wqt+variable_a_wqt;
      variable_b_wqt=variable_b_wqt+vector_q(variable_n_wqt+1)*variable_s_wqt;
   end
   
   %Calcula Wq(t)
   wq_t=1-variable_b_wqt.*exp(-mu_n*x*s_n);
   
  
   clear w_t;
   
   for i=1:length(x)   
      w_t(i)=quad('calcular_wt_mmsinfh',0,x(i), 0.001, [], x(i), s_n, vector_q, h_n, mu_n);
      if (w_t(i)>1)
          w_t(i)=1;
      end
   end
   
   
   clear n2;
   clear variable_a_wqt;
   clear variable_b_wqt;
   clear variable_s_wqt;
   clear variable_n_wqt;
   
  case 7,
	%Modelo M/M/s/inf/H con Y repuestos   
   
   aux=0;
   for i=y_n:y_n+h_n
   	  aux=(i-y_n)*vector_p(i+1)+aux;
   end
   aux=h_n-aux;
   
   for i=1:y_n
      vector_q(i)=h_n*vector_p(i)/aux;
   end
   for i=y_n+1:y_n+h_n
      vector_q(i)=(h_n+y_n-(i-1))*vector_p(i)/aux;
   end
   
     
   variable_a_wqt=ones(1,length(x));
   variable_s_wqt=ones(1,length(x));
   variable_b_wqt=vector_q(s_n+1)*ones(1,length(x));

      
   for variable_n_wqt=s_n+1:h_n-1
      variable_a_wqt=variable_a_wqt.*(mu_n*x*s_n/(variable_n_wqt-s_n));
      variable_s_wqt=variable_s_wqt+variable_a_wqt;
      variable_b_wqt=variable_b_wqt+vector_q(variable_n_wqt+1)*variable_s_wqt;
   end
   
   %Calcula Wq(t)
   wq_t=1-variable_b_wqt.*exp(-mu_n*x*s_n);
   
   clear w_t;
   
   for i=1:length(x)
      w_t(i)=quad('calcular_wt_mmsinfh',0,x(i), 0.001, [], x(i), s_n, vector_q, h_n, mu_n);
      if (w_t(i)>1)
          w_t(i)=1;
      end
   end
   
   
   clear aux;
   clear variable_a_wqt;
   clear variable_b_wqt;
   clear variable_s_wqt;
   clear variable_n_wqt;
                   
   
  end


  %No representamos en el caso de ser M/M/inf

  if (eleccion ~=8) 

	global dibujo1;

	dibujo1=axes('Position', [0.17 0.19 0.3 0.3]);

	plot(x,w_t,'r-',x,wq_t,'b');
    title('Grafica de W(t) en rojo y Wq(t) en azul');
      
  end




  %Si se hace click en el boton de siguiente se ejecuta
  %el fichero aquas

	if (estoy_en_redes_abiertas ~=1 )
		boton_salida_sig = uicontrol(gcf, 'Style', 'Pushbutton',...
	     'String', 'Menu Inicio >>', 'Value', 0, ...
   	     'Units', 'normalized', ...
	     'Position', [0.2 0.05 0.2 0.07], ...
         'FontUnits', 'normalized', ...
         'FontWeight', 'bold', ...
         'FontSize', 0.3, ...
          'Callback', 'aquas');
   
        boton_salida_cambiar_parametros  = uicontrol(gcf, 'Style', 'Pushbutton',...
            'String', 'Cambiar los parametros del problema >>', 'Value', 0, ...
            'Units', 'normalized', ...
	        'Position', [0.5 0.05 0.3 0.07], ...
            'FontUnits', 'normalized', ...
            'FontWeight', 'bold', ...
            'FontSize', 0.25, ...
	        'Callback', 'cambiar_parametros_modelomm');

	else
   	    boton_salida_sig = uicontrol(gcf, 'Style', 'Pushbutton',...
	        'String', 'Cerrar', 'Value', 0, ...
   	        'Units', 'normalized', ...
	        'Position', [0.38 0.05 0.2 0.1], ...
            'FontUnits', 'normalized', ...
            'FontWeight', 'bold', ...
            'FontSize', 0.3, ...
            'Callback', 'cerrar_ventana');   
	end
    
    

 
    

 
 
  %Este else se corresponde con el if grande de arriba del todo
  %que comprueba si los parametros son correctos
 
else 
   
   text_errores = uicontrol(gcf, 'Style', 'Text', ...
		  'Units', 'normalized', ...
		  'String', 'ERROR EN LOS PARAMETROS', ...
          'Position', [0.35 0.74 0.30 0.04], ...
		  'BackgroundColor', [.702 .702 .702],...   
          'ForegroundColor', 'r',...
          'FontUnits', 'normalized', ...
          'FontWeight', 'bold', ...
          'FontSize', 0.3, ...
		  'HorizontalAlignment', 'Center');


end